# Use the official image as a parent image.
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build-env

# Set the working directory.
WORKDIR /app

# Copy csproj and restore as distinct layers.
COPY *.sln .
# COPY src/ArticlesCrawler.VNExpressCrawler/*.csproj ./src/ArticlesCrawler.VNExpressCrawler/
# COPY src/ArticlesCrawler.Core/*.csproj ./src/ArticlesCrawler.Core/
# COPY src/ArticlesCrawler.Infrastructure/*.csproj ./src/ArticlesCrawler.Infrastructure/
COPY src ./src
COPY data ./data
RUN dotnet restore src/ArticlesCrawler.VNExpressCrawler/ArticlesCrawler.VNExpressCrawler.csproj

# Copy everything else and build.
WORKDIR /app/src/ArticlesCrawler.VNExpressCrawler
RUN dotnet publish -c Release -o out

# Build runtime image.
FROM mcr.microsoft.com/dotnet/runtime:6.0
WORKDIR /app
COPY --from=build-env /app/src/ArticlesCrawler.VNExpressCrawler/out .
COPY --from=build-env /app/src/ArticlesCrawler.VNExpressCrawler/appsettings*.json ./
COPY --from=build-env /app/data ./data

# Set the ASPNETCORE_ENVIRONMENT environment variable.
ENV ASPNETCORE_ENVIRONMENT=Production

# Give write permissions to the database directory.
RUN chmod 777 /app/data

# Run the app when the container launches.
ENTRYPOINT ["dotnet", "ArticlesCrawler.VNExpressCrawler.dll"]